{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-rsshub/seo.js","webpack:///./node_modules/gatsby-plugin-rsshub/meta.js"],"names":["SEO","description","lang","meta","title","siteTitle","author","siteDescription","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","IndexPage","pageContext","links","rsshub","siteMetadata","map","item","href","withPrefix","updated"],"mappings":"uIAUA,SAASA,EAAT,GAAoF,IAArEC,EAAoE,EAApEA,YAAaC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAOC,EAAkB,EAAlBA,gBACzDC,EAAkBP,GAAeM,GAAmB,GAE1D,OACE,kBAACE,EAAA,EAAD,CACEC,eAAgB,CACdR,QAEFE,MAAOA,EACPO,cAAa,SAAUN,GAAa,IACpCF,KAAM,CACJ,CACES,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,GAEX,CACEM,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASL,IAEXO,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAICD,Q,YCxCAiB,UArBG,SAAC,GAKZ,IAAD,IAJJC,YACYC,EAGR,EAHFC,OAAUD,MACVE,EAEE,EAFFA,aAGF,OACE,6BACE,kBAAC,EAAD,CAAKhB,UAAWgB,EAAajB,MAAQG,gBAAiBc,EAAapB,YAAaG,MAAM,WAAWE,OAAQe,EAAaf,SACtH,wCACA,4BACGa,EAAMG,KAAI,SAACC,GAAD,OACT,4BACE,uBAAGC,KAAMC,qBAAWF,EAAKC,OAAQD,EAAKnB,OADxC,cACwEmB,EAAKG","file":"component---node-modules-gatsby-plugin-rsshub-meta-js-9c22f3b4a9a5f7f19074.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nfunction SEO({ description, lang, meta, title, siteTitle ,author,siteDescription}) {\n  const metaDescription = description || siteDescription || \"\"\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${siteTitle || \"\"}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\n\nexport default SEO\n","import React from \"react\";\nimport SEO from './seo'\nimport {withPrefix} from 'gatsby'\n\nconst IndexPage = ({\n  pageContext: {\n    rsshub: { links },\n    siteMetadata\n  },\n}) => {\n  return (\n    <div>\n      <SEO siteTitle={siteMetadata.title}  siteDescription={siteMetadata.description} title=\"RSS List\" author={siteMetadata.author}></SEO>\n      <h2>Rss List</h2>\n      <ul>\n        {links.map((item) => (\n          <li>\n            <a href={withPrefix(item.href)}>{item.title}</a> &nbsp;updated:&nbsp;{item.updated}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}